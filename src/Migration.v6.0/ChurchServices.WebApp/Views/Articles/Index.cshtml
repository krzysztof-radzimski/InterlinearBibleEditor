@model List<ChurchServices.WebApp.Controllers.ArticleInfoBase>
@{
    ViewData["Title"] = "Nauczanie";
    var _listView = false;
    var oneAuthor = "";
    List<string> authors = new List<string>();
    if (Model != null) {
        authors = Model.Select(x => x.AuthorName).Distinct().ToList();
        if (authors.Count == 1) {
            oneAuthor = authors.First();
        }
    }
    var articlesWithImageCount = 5;
}

<div class="max-width-1000" style="padding-top: 20px;">
    @await Html.PartialAsync("~/Views/Shared/_Baner.cshtml")
    @if (oneAuthor.IsNotNullOrEmpty()) {
        <h1>
            <i class="fas fa-newspaper"></i>&nbsp;<span>@ViewData["Title"] :: @oneAuthor</span>
            <a href="/Articles" class="btn btn-outline-dark" style="float: right;">Więcej...</a>
        </h1>
    }
    else {
        <h1 class="col">
            <i class="fas fa-newspaper"></i>&nbsp;<span>@ViewData["Title"]</span><span>&nbsp;</span>
            <div class="dropdown" style="float: right;">
                <a class="btn btn-secondary dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Wybierz autora
                </a>

                <ul class="dropdown-menu">
                    @foreach (var item in authors) {
                        <li><a class="dropdown-item" href="/Articles/@item.Replace(" ","-")">@item</a></li>
                    }
                </ul>
            </div>
          
        </h1>
    }

    

    <div class="row">
        @foreach (var item in Model) {
            var passage = item.Passage != null ? $", {item.Passage}" : "";
            if (articlesWithImageCount >= 0) {
                articlesWithImageCount--;
                var _item = item as ChurchServices.WebApp.Controllers.ArticleInfo;
                var lead = _item.Lead;
                lead = System.Text.RegularExpressions.Regex.Replace(lead, @"[\s\(\,\;][a,i,o,w,z]\s", delegate (System.Text.RegularExpressions.Match m) {
                    return " " + m.Value.Trim() + "&nbsp;";
                }, System.Text.RegularExpressions.RegexOptions.IgnoreCase);

                <a href="/Article/@item.Id" class="list-group-item list-group-item-action m-0 border-0" aria-current="true" style="padding-left: 0; padding-right: 0;">
                    <div class="card bg-transparent m-0 p-0 shadow-lg mb-3">
                        <div class="row g-0 m-0">
                            <div class="col-md-4 d-lg-block">
                                <div class="d-lg-block  sermon-image-home" style="background-image: url('data:image/png;base64, @_item.AuthorPicture');"></div>
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h3 class="card-title text-gradient-church-service">@item.Subject</h3>
                                    <p class="card-text" style="line-height: 1.3;">@Html.Raw(lead)</p>
                                    @if (oneAuthor.IsNullOrEmpty()) {
                                        <p class="card-text article-days-ago"><small class="text-muted">@item.AuthorName<br /> @item.GetDaysAgo()</small></p>
                                    }
                                    else {
                                        <p class="card-text article-days-ago"><small class="text-muted">@item.GetDaysAgo()</small></p>
                                    }
                                </div>
                                <strong class="d-inline-block mb-2 text-success pill-white float-end sermon-passage-home">@_item.Type@passage</strong>
                            </div>
                        </div>
                    </div>
                </a>
            }
            else {
                if (!_listView) {
                    _listView = true;
                    @Html.Raw(@"<div style=""display: table;"">")
                }

                <div style="display: table-row;">
                    <div style="display: table-cell; vertical-align: top; padding-top: 10px; padding-right: 5px;">@Html.Raw(item.Date.GetShortDatePl())</div>
                    <div style="display: table-cell; vertical-align: top; padding-top: 10px;"><a href="/Article/@item.Id" class="link text-decoration-none">@item.Subject@passage</a></div>
                    @if (oneAuthor.IsNullOrEmpty()) {
                        <div style="display: table-cell; vertical-align: top; padding-top: 10px; font-size: 80%;"><i>@Html.Raw(item.AuthorName.GetInitials())</i></div>
                    }
                </div>

                @if (item == Model.LastOrDefault()) {
                    @Html.Raw(@"</div>")
                }
            }
        }
    </div>
    @if (oneAuthor.IsNotNullOrEmpty()) {
        <div class="d-flex flex-row-reverse mt-3">
            <a href="/Articles" class="btn btn-secondary">Więcej...</a>
        </div>
    }
</div>