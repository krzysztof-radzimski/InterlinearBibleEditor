@{
    ViewData["Title"] = "Artykuł";
    
    var __host = (this.Context.Request.IsHttps ? "https://" : "http://") + this.Context.Request.Host;
    var __path = this.Context.Request.Path;

}
@using IBE.Common.Extensions
@using DevExpress.Xpo;
@using System.Linq;
@using IBE.Data.Model;

@model IBE.Data.Model.Article

@section HeaderScripts {
    @if (Model.IsNotNull()) {
        <!-- social sharing metadata -->
        <meta property="og:title" content="@Model.Subject  - Kościół Chrześcijan Baptystów w Nowym Dworze Mazowieckim" />
        <meta property="og:description" content="@Model.Lead" />
        <meta property="og:image" content="@__host/api/ArticleImage?id=@Model.Oid" />
        <meta property="og:url" content="@__host/Article?id=@Model.Oid" />
        <meta property="og:type" content="article" />
        <meta property="og:locale" content="pl_PL" />
    }
}

@if (Model != null) {

    ViewData["Title"] = @Model.Subject;

    <div class="row shadow-lg" style="max-width: 1040px; margin: auto;">
        <div class="col p-4 d-flex flex-column position-static">
            <div>
                <strong class="d-inline-block mb-2 text-success pill-white" style="width:auto;"><a href="/articles" class="text-decoration-none" title="Więcej artykułów"><i class="far fa-arrow-alt-circle-left"></i></a></strong>
                <strong class="d-inline-block mb-2 text-success pill-white">@Model.Type.GetDescription()</strong>
            </div>
            <h3 class="mb-0">@Model.Subject</h3>
            <p class="mb-auto fst-italic">@Model.AuthorName</p>
            <p class="mb-auto">@Model.Lead</p>
            <div class="mb-1 text-muted">@Model.Date.GetDatePl()</div>
        </div>

        @if (Model.AuthorPicture.IsNotNull()) {
            <div class="col-auto d-none d-lg-block" style="background-image: url('data:image/png;base64, @Convert.ToBase64String(Model.AuthorPicture)'); background-position: center center; background-repeat: no-repeat; background-size: cover; max-width: 350px; width: 40%;"></div>
        }
    </div>
    <div style="text-align: justify; max-width: 900px; margin: auto;">
        @{
            var text = Model.Text;
            
            // usuwam sierotki
            text = System.Text.RegularExpressions.Regex.Replace(text, @"[\s\(\,\;][a,i,o,w,z]\s", delegate (System.Text.RegularExpressions.Match m) {
                return " " + m.Value.Trim() + "&nbsp;";
            }, System.Text.RegularExpressions.RegexOptions.IgnoreCase);
        }

        @Html.Raw(text)
    </div>
}
else {
    <p>Bra danych do wyświetlenia</p>
}
