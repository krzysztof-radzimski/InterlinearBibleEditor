@{
    ViewData["Title"] = "Artykuł";
    
    var __host = (this.Context.Request.IsHttps ? "https://" : "http://") + this.Context.Request.Host;
    var __path = this.Context.Request.Path;

}
@using Church.WebApp.Models
@using IBE.Common.Extensions
@using DevExpress.Xpo;
@using System.Linq;
@using IBE.Data.Model;
@inject IConfiguration Configuration 

@model ArticleControllerModel

@section HeaderScripts {
    @if (Model.IsNotNull()) {
        <!-- social sharing metadata -->
        <meta property="og:title" content="@Model.Article.Subject - @Configuration["PageTitle"]" />
        <meta property="og:description" content="@Model.Article.Lead" />
        <meta property="og:image" content="@__host/api/ArticleImage?id=@Model.Article.Oid" />
        <meta property="og:url" content="@__host/Article?id=@Model.Article.Oid" />
        <meta property="og:type" content="article" />
        <meta property="og:locale" content="pl_PL" />
    }
}

@if (Model != null) {

    ViewData["Title"] = @Model.Article.Subject;

    <div class="row shadow-lg" style="max-width: 1040px; margin: auto;">
        <div class="col p-4 d-flex flex-column position-static">
            <div class="btn-group" style="max-width:150px;">
                <a href="/articles" class="btn btn-success active d-inline-block text-decoration-none" title="Więcej artykułów" style="max-width: 50px;"><i class="far fa-arrow-alt-circle-left"></i></a>
                <span class="btn btn-light d-inline-block text-success fw-bold" role="button">@Model.Article.Type.GetDescription()</span>
            </div>
            <h3 class="mb-0">@Model.Article.Subject</h3>
            <p class="mb-auto fst-italic">@Model.Article.AuthorName</p>
            <p class="mb-auto">@Model.Article.Lead</p>
            <div class="mb-1 text-muted">@Html.Raw(Model.Article.Date.GetDatePl())</div>
        </div>

        @if (Model.Article.AuthorPicture.IsNotNull()) {
            <div class="col-auto d-none d-lg-block" style="background-image: url('data:image/png;base64, @Convert.ToBase64String(Model.Article.AuthorPicture)'); background-position: center center; background-repeat: no-repeat; background-size: cover; max-width: 350px; width: 40%;"></div>
        }
    </div>
    <div style="text-align: justify; max-width: 900px; margin: auto;">
        @{
            var text = Model.Article.Text;
            
            // usuwam sierotki
            text = System.Text.RegularExpressions.Regex.Replace(text, @"[\s\(\,\;][a,i,o,w,z]\s", delegate (System.Text.RegularExpressions.Match m) {
                return " " + m.Value.Trim() + "&nbsp;";
            }, System.Text.RegularExpressions.RegexOptions.IgnoreCase);
        }

        @Html.Raw(text)
    </div>
}
else {
     <div style="max-width: 1025px; margin: auto; padding-top: 20px;">
        <h1>Brak danych do wyświetlenia</h1>
        <p>Nie ma artykułu lub kazania o takim identyfikatorze w naszej bazie</p>
        <a href="/Articles" class="text-decoration-none" title="Więcej artykułów"><i class="far fa-arrow-alt-circle-left"></i> Pokaż listę artykułów</a>
    </div>
}
